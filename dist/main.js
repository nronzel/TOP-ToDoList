(()=>{"use strict";class t{static loadHome(){t.initProjects()}static initUpcoming(){}static initProjects(){t.addDefaultEventListeners()}static initAddBtns(){}static addDefaultEventListeners(){const e=document.getElementById("newProjBtn"),s=document.getElementById("newTaskBtn"),c=document.querySelectorAll("#projectBtn"),a=document.querySelectorAll("#defaultProj"),n=document.querySelectorAll(".close-popup"),o=document.getElementById("newProjPopup"),i=document.getElementById("newTaskPopup");e.addEventListener("click",t.activateProjectPopup),s.addEventListener("click",t.activateTaskPopup),o.addEventListener("click",t.handleProjPopup),i.addEventListener("click",t.handleTaskPopup),a.forEach((e=>e.addEventListener("click",t.defaultProjActions))),c.forEach((e=>e.addEventListener("click",t.projBtnActions))),n.forEach((e=>e.addEventListener("click",t.closeAllPopups)))}static initProjectBtns(){const e=document.querySelectorAll("#projectBtn"),s=document.querySelectorAll(".close-popup");e.forEach((e=>e.addEventListener("click",t.projBtnActions))),s.forEach((e=>e.addEventListener("click",t.closeAllPopups)))}static drawProject(t){document.getElementById("projectList").innerHTML+=`\n    <button id="projectBtn" class="nav-btn">\n            <div class="nav-btn-left">\n              <i class="fa-solid fa-list-check"></i>\n              <span>${t}</span>\n            </div>\n            <div class="nav-btn-right">\n              <i class="fa-solid fa-xmark"></i>\n            </div>\n          </button>\n    `}static drawTask(t){}static projBtnActions(e){this.children[0].children[1].textContent,(e.target.classList.contains("fa-xmark")||e.target.parentNode.classList.contains("fa-xmark"))&&console.log("removed"),t.clearAllActive(),this.classList.add("active")}static defaultProjActions(e){this.innerText.trim(),t.clearAllActive(),this.classList.add("active")}static clearAllActive(){document.querySelectorAll(".nav-btn").forEach((t=>t.classList.remove("active")))}static activateProjectPopup(){const t=document.getElementById("newProjPopup"),e=document.getElementById("newProjBtn");t.classList.add("active"),e.style.display="none"}static closeProjectPopup(){const t=document.getElementById("newProjPopup"),e=document.getElementById("newProjBtn");t.classList.remove("active"),e.style.display="flex"}static clearNewProjInput(){document.querySelector(".new-proj-input").value=""}static handleProjPopup(e){if((e.target.classList.contains("fa-xmark")||e.target.parentNode.classList.contains("fa-xmark"))&&t.closeProjectPopup(),e.target.classList.contains("fa-check")||e.target.parentNode.classList.contains("fa-check")){const e=document.querySelector(".new-proj-input");""==e.value&&alert("Project name cannot be blank!"),t.drawProject(e.value),t.closeProjectPopup(),t.initProjectBtns()}t.clearNewProjInput()}static activateTaskPopup(){const t=document.getElementById("newTaskPopup"),e=document.getElementById("newTaskBtn");t.classList.add("active"),e.style.display="none"}static closeTaskPopup(){const t=document.getElementById("newTaskPopup"),e=document.getElementById("newTaskBtn");t.classList.remove("active"),e.style.display="flex"}static closeAllPopups(){t.closeProjectPopup(),t.closeTaskPopup()}static handleTaskPopup(e){if((e.target.classList.contains("fa-xmark")||e.target.parentNode.classList.contains("fa-xmark"))&&t.closeTaskPopup(),e.target.classList.contains("fa-check")||e.target.parentNode.classList.contains("fa-check")){const e=document.querySelector(".new-task-input");""==e.value&&alert("Task name cannot be blank!"),console.log(e.value),t.closeTaskPopup()}t.clearNewTaskInput()}static clearNewTaskInput(){document.querySelector(".new-task-input").value=""}}class e{constructor(t){this.title=t,this.tasks=[]}setTitle(t){this.title=t}getTitle(){return this.title}setTasks(t){this.tasks=t}getTasks(){return this.tasks}getTask(t){return this.tasks.find((e=>e.getTitle()===t))}contains(t){return this.tasks.some((e=>e.getTitle()===t))}addTask(t){this.tasks.find((e=>e.getTitle()===t.name))||this.tasks.push(t)}removeTask(t){this.tasks=this.tasks.filter((e=>e.name!==t))}}new class{constructor(){this.projects=[],this.projects.push(new e("Today")),this.projects.push(new e("Tomorrow"))}setProjects(t){this.projects=t}getProjects(){return this.projects}getProject(t){return this.projects.find((e=>e.getTitle()===t))}contains(t){return this.projects.some((e=>e.getTitle()===t))}addProject(t){this.projects.find((e=>e.name===t.name))?alert("Project already exists"):this.projects.push(t)}removeProject(t){const e=this.projects.find((e=>e.getName()===t));this.projects.splice(this.projects.indexOf(e),1)}},t.loadHome()})();